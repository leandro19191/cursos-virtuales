{"version":3,"sources":["../src/conditions.js"],"names":["define","$","getFieldRow","field","fieldRow","length","closest","Conditions","fieldName","conditions","reqHTML","parseJSON","allElements","forEach","option","hiddenfields","inArray","push","requiredfields","initReqStars","toggleReqStars","change","bind","prototype","options","initReqFields","element","find","selectedValue","val","node","oldStyle","has","hide","append","show","remove","apply"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handles applying conditions.\n *\n * @module     profilefield_conditional/conditions\n * @copyright  2016 Shamim Rezaie <http://foodle.org>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery'], function($) {\n\n    /**\n     * Get the jQuet object of the row that contains provided field.\n     *\n     * @param {String} field The name of a field.\n     * @return {jQuery} The form row that contains the field.\n     */\n    var getFieldRow = function(field) {\n        var fieldRow = $('#fitem_id_profile_field_' + field);\n        if (fieldRow.length === 0) { // Boost style.\n            fieldRow = $('.fitem [name=profile_field_' + field + '], .fitem [name^=profile_field_' + field + '\\\\[]')\n                    .closest('.fitem.row');\n        }\n        return fieldRow;\n    };\n\n    /**\n     * Condition object.\n     *\n     * @param {String} fieldName The conditional field name.\n     * @param {String} conditions Set of conditions as a json string.\n     * @param {String} reqHTML The html string for specifying required fields.\n     * @constructor\n     */\n    var Conditions = function(fieldName, conditions, reqHTML) {\n        this.fieldName = fieldName;\n        this.conditions = $.parseJSON(conditions);\n        var allElements = [];\n        this.conditions.forEach(function(option) {\n            option.hiddenfields.forEach(function(field) {\n                if ($.inArray(field, allElements) == -1) {\n                    allElements.push(field);\n                }\n            });\n            option.requiredfields.forEach(function(field) {\n                if ($.inArray(field, allElements) == -1) {\n                    allElements.push(field);\n                }\n            });\n        });\n\n        this.allElements = allElements;\n        this.reqHTML = reqHTML;\n\n        this.initReqStars();\n        this.toggleReqStars();\n        $('#id_profile_field_' + fieldName).change(this.toggleReqStars.bind(this));\n    };\n\n    Conditions.prototype.fieldName = null;\n    Conditions.prototype.conditions = null;\n    Conditions.prototype.allElements = null;\n    /** @var {Array} options Menu options. */\n    Conditions.prototype.options = null;\n\n    /**\n     * Keep record of fields that are required when the conditional field is not set and add a required rule for this case.\n     */\n    Conditions.prototype.initReqStars = function() {\n        var initReqFields = [];\n\n        this.allElements.forEach(function(element) {\n            if ((getFieldRow(element).find('.fitemtitle .req').length !== 0) ||\n                    (getFieldRow(element).find('abbr.text-danger').length !== 0)) { // Support for Boost.\n                initReqFields.push(element);\n            }\n        });\n\n        this.conditions.push({'option': '', 'requiredfields': initReqFields});\n    };\n\n    /**\n     * Display stars for new required fields and remove stars for fields that are no longer required.\n     */\n    Conditions.prototype.toggleReqStars = function() {\n        var selectedValue = $('#id_profile_field_' + this.fieldName).val();\n        var reqHTML = this.reqHTML;\n        var allElements = this.allElements;\n        var requiredfields;\n        var fieldRow;\n        var node;\n        var oldStyle = null;\n\n        this.conditions.forEach(function(option) {\n            if (option.option == selectedValue) {\n                requiredfields = option.requiredfields;\n                allElements.forEach(function(element) {\n                    fieldRow = getFieldRow(element);\n                    if (oldStyle === null) {\n                        oldStyle = fieldRow.has('.float-sm-right').length;\n                    }\n                    if ($.inArray(element, requiredfields) != -1) {\n                        node = fieldRow.find('.text-danger');\n\n                        // The following check is required to prevent putting multiple asterisks.\n                        if (node.length === 0) {\n                            node = $(reqHTML).hide();\n                            if (oldStyle) {\n                                fieldRow.find('.float-sm-right').append(node);\n                            } else {\n                                fieldRow.find('.col-form-label .align-items-center').append(node);\n                            }\n                        }\n\n                        node.show();\n                    } else {\n                        fieldRow.find('.text-danger').hide(0, function() {\n                            // The following check is required to prevent removing asterisk when the selected item\n                            // is quickly changed.\n                            if ($.inArray(element, requiredfields) != -1) {\n                                getFieldRow(element).find('.text-danger').remove();\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        this.reqHTML = reqHTML; // In case it is updated above as a result of Boost style compatibility.\n    };\n\n    return {\n\n        /**\n         * Main initialisation.\n         *\n         * @param {String} fieldName The conditional field name.\n         * @param {String} conditions Set of conditions as a json string.\n         * @param {String} reqHTML The html string for specifying required fields.\n         * @return {Conditions} A new instance of Conditions.\n         * @method init\n         */\n        apply: function(fieldName, conditions, reqHTML) {\n            return new Conditions(fieldName, conditions, reqHTML);\n        }\n    };\n});\n"],"file":"conditions.min.js"}